@import 'scss/reset';
@import 'scss/base';
@import 'scss/variables';
@import 'scss/bubble';

@import url('https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@600;700&display=swap');

// breakpoint - Mobile: 375px - Desktop: 1366px

body {
  font-family: 'Barlow Semi Condensed', sans-serif;
  width: 100vw;
  background: linear-gradient(90deg,hsl(237, 49%, 15%),hsl(214, 47%, 23%), hsl(237, 49%, 15%));
  color: $text-color;
  letter-spacing: 2px;

  .container {
    width: 315px;
    margin: 46px auto 0 auto;
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 8px 10px 32px;
    border: solid 3px $header-outlined;
    border-radius: 9px;
    .actions {
      display: flex;
      flex-direction: column;
      color: white;
      font-size: 8px; //36
      img {
        height: 48px;
      }
    }
    .score {
      padding: 14px 24px;
      display: flex;
      align-items: center;
      flex-direction: column;
      background: white;
      border-radius: 6px;


      .label {
        color: $score-color;
        margin-bottom: 10px;
      }
      .number {
        font-size: 28px; //46
      }
    }
  }
  .picked-choice {
    display: none;
    font-size: 16px;
    color: white;
    text-align: center;
  }

  #stepContainer {
    position: relative;
    margin-top: 80px;

    $triangleLength: $sm-size - $sm-bubble-size;
    $heightTriangle: heightTriangle($triangleLength);

    &.step-1 {
      background-position: 68px 68px;

      .bubble {
        left: calc(50% - #{$sm-bubble-size/2}px);
        top: calc($heightTriangle/3)+px;
      }
      &:not(.end-step1) {
        .paper {
          transform: translate(-$triangleLength/2+px, -($heightTriangle/3)+px);
        }
        .rock  {
          transform: translate($triangleLength/2+px,-($heightTriangle/3)+px);
        }
        .scissors {
          transform: translate(0,($heightTriangle/3)*2+px);
        }
      }
      .bubble.ghost {
        display: none;
      }
    }

    &.end-step1 {
      .paper, .scissors, .rock {
        &.selected {
          z-index: 10;
        }
      }
    }

    &.step-2 {
      
      display: grid;
      row-gap: 24px;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr auto;
      .bubble:not(.selected) {
        display: none;
      }

      .bubble.selected {
        position: relative;
        justify-self: center;
        grid-row: 1;
        grid-column: 1;
        left: 0;
      }
      .picked-choice {
        display: block;

        &:nth-child(1) {
          grid-row: 2/3;
          grid-column: 1;
        }

        &:nth-child(2) {
          grid-row: 2/3;
          grid-column: 2/3;
        }
      }
      .bubble.ghost {
        display: block;
        justify-self: center;
        grid-row: 1;
        grid-column: 2/3;
      }
    }
  }
}

@media (min-width: 760px) {
  body {
    .container {
      width: 700px;
      margin: 46px auto 0 auto;
    }
    .header {
      .actions {
        font-size: 36px;
        img {
          height: 96px;
        }
      }
      .score {
        padding: 20px 46px;
        .label {
          font-size: 12px;
        }
        .number {
          font-size: 48px;
          line-height: 48px;
        }
      }
    }

    #stepContainer {
      $triangleLength: $bg-size - $bg-bubble-size;
      $heightTriangle: heightTriangle($triangleLength);

      .bubble {
        width: $bg-bubble-size + px;
        height: $bg-bubble-size + px;
      }
      &.step-1 {
        margin: 60px auto 0 auto;
        width: $bg-size;
        
        .bubble {
          left: calc(50% - #{$bg-bubble-size/2}px);
          top: calc(heightTriangle($triangleLength)/3)+px;
        }

        &:not(.end-step1) {
          .paper {
            transform: translate(-$triangleLength/2+px, -($heightTriangle/3)+px);
            &:hover {
              transform: translate(-$triangleLength/2+px, -($heightTriangle/3)+px) scale(1.1);
            }
          }
      
          .rock {
            transform: translate($triangleLength/2+px,-($heightTriangle/3)+px);
            &:hover {
              transform: translate($triangleLength/2+px,-($heightTriangle/3)+px) scale(1.1);
            }
          }
      
          .scissors {
            transform: translate(0,($heightTriangle/3)*2+px);
            &:hover {
              transform: translate(0,($heightTriangle/3)*2+px) scale(1.1);
            }
          }
        }
      }

      &.step-2 {
        row-gap: 65px;
        .bubble {
          width: $bg-bubble-size-step-2;
          height: $bg-bubble-size-step-2;
        }
        .bubble.selected {
          grid-row: 2/3;
          grid-column: 1;
          left: 0;
        }
        .picked-choice {
          font-size: 24px;

          &:nth-child(1) {
            grid-row: 1;
            grid-column: 1;
          }
  
          &:nth-child(2) {
            grid-row: 1;
            grid-column: 2/3;
          }
        }
        .bubble.ghost {
          grid-row: 2/3;
          grid-column: 2/3;
        }
      }
    }
  }
}